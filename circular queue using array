import java.util.Scanner;

public class Cqueue {
    int size = 5, front = -1, rear = -1;
    int[] queue = new int[size];
    Scanner sc = new Scanner(System.in);

    void enqueue() {
        if ((rear + 1) % size == front)
            System.out.println("Queue Overflow");
        else {
            System.out.print("Enter value to enqueue: ");
            int val = sc.nextInt();
            if (front == -1) front = 0;
            rear = (rear + 1) % size;
            queue[rear] = val;
            System.out.println(val + " enqueued.");
        }
    }

    void dequeue() {
        if (front == -1)
            System.out.println("Queue Underflow");
        else {
            System.out.println("Dequeued: " + queue[front]);
            if (front == rear) {
                front = rear = -1; // queue becomes empty
            } else {
                front = (front + 1) % size;
            }
        }
    }

    void display() {
        if (front == -1)
            System.out.println("Queue is empty");
        else {
            System.out.print("Queue: ");
            int i = front;
            while (true) {
                System.out.print(queue[i] + " ");
                if (i == rear) break;
                i = (i + 1) % size;
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Cqueue q = new Cqueue();
        int choice;
        do {
            System.out.println("\n1. Enqueue\n2. Dequeue\n3. Display\n4. Exit");
            System.out.print("Enter choice: ");
            choice = q.sc.nextInt();
            switch (choice) {
                case 1: q.enqueue(); break;
                case 2: q.dequeue(); break;
                case 3: q.display(); break;
                case 4: System.out.println("Exiting..."); break;
                default: System.out.println("Invalid choice");
            }
        } while (choice != 4);
    }
}
